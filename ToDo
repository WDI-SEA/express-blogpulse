Part 1: Create a Comment model

Draft code:
--create model+migrate
1. sequelize model:create --name comment --attributes name:string,content:text,articleId:integer
2. adjust the migration to default/null values
3. define associations
4. sequelize db:migrate

--associations
1. in comment:
models.comment.belongsTo(models.article)
2. in article:
models.article.hasMany(models.comment)

Part 3: Styling
When finished with the above, style the application appropriately with CSS. Use other media and blog sites as examples.

Bonuses
Add the ability to edit articles
Instead of redirecting to /authors/new to create a new author, have the form appear using a Bootstrap modal.
Add the ability to create rich text articles and comments using Markdown.
Front-end Bootstrap Markdown editor
A markdown parser for your EJS templates